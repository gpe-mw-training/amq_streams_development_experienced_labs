apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: kafka-connect
objects:
- apiVersion: kafka.strimzi.io/v1beta1
  kind: KafkaConnect
  metadata:
    name: ${KAFKA_CONNECT_NAME}
    annotations:
      strimzi.io/use-connector-resources: 'true'  
  spec:
    version: 2.4.0
    replicas: 1
    bootstrapServers: ${KAFKA_BOOTSTRAP_SERVERS}
    image: ${KAFKA_CONNECT_IMAGE}
    config:
      group.id: ${KAFKA_CONNECT_NAME}
      offset.storage.topic: ${KAFKA_CONNECT_NAME}-offsets
      config.storage.topic: ${KAFKA_CONNECT_NAME}-configs
      status.storage.topic: ${KAFKA_CONNECT_NAME}-status
      key.converter: org.apache.kafka.connect.json.JsonConverter
      value.converter: org.apache.kafka.connect.json.JsonConverter
      key.converter.schemas.enable: true
      value.converter.schemas.enable: true
      config.storage.replication.factor: 3
      offset.storage.replication.factor: 3
      status.storage.replication.factor: 3
    resources:
      requests:
        cpu: '${KAFKA_CONNECT_REQUESTS_CPU}'
        memory: '${KAFKA_CONNECT_REQUESTS_MEMORY}'
      limits:
        cpu: '${KAFKA_CONNECT_LIMITS_CPU}'
        memory: '${KAFKA_CONNECT_LIMITS_MEMORY}'
    livenessProbe:
      initialDelaySeconds: 45
      timeoutSeconds: 5
    readinessProbe:
      initialDelaySeconds: 15
      timeoutSeconds: 5
    jvmOptions:
      gcLoggingEnabled: false
parameters:
- name: KAFKA_CONNECT_NAME
  value: kafka-connect
- name: KAFKA_BOOTSTRAP_SERVERS
  required: true
- name: KAFKA_CONNECT_IMAGE
  required: true
  value: quay.io/btison/strimzi-debezium-mysql-jdbc:1.4.0-1.0.2.Final
- name: KAFKA_CONNECT_REQUESTS_CPU
  value: 100m
- name: KAFKA_CONNECT_REQUESTS_MEMORY
  value: 250Mi
- name: KAFKA_CONNECT_LIMITS_CPU
  value: 500m
- name: KAFKA_CONNECT_LIMITS_MEMORY
  value: 1Gi  